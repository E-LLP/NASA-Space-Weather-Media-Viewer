<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:sunview="services.sunview.*"
		xmlns:ns1="*"
		creationComplete="view1_creationCompleteHandler(event)" 
		destructionPolicy="never"
		title="The Sun" 
		viewActivate="view1_viewActivateHandler(event)"
		viewDeactivate="view1_viewDeactivateHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import id.core.GestureGlobals;
			import id.utils.ViewArray;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			import spark.transitions.CrossFadeViewTransition;
			import id.utils.XMLObjects;
			
			private var buttonBarArray:Array = [LiveViewsView, VisualizationsView, VideosView, MoreView];
			private var index:int;
			
			protected function list_changeHandler(event:IndexChangeEvent):void
			{				
				XMLObjects.category=title;
				navigator.pushView(MediaView, list.selectedItem);
			}
			
			protected function view1_creationCompleteHandler(event:FlexEvent):void
			{
				rect.height=GestureGlobals.btnBarHeight;
				
				backButton.text.text="Live Views";
				backButton.text.width=backButton.text.textWidth+5;
				backButton.button.width=backButton.text.width+20;
				
				getData();
								
				index=buttonBar.selectedIndex;
			}
			
			private function buttonChange(event:IndexChangeEvent):void 
			{ 				
				if(index==buttonBar.selectedIndex)
				{
					return;
				}
				
				var cubeFlip:CrossFadeViewTransition = new CrossFadeViewTransition();
				cubeFlip.duration = 500;
				navigator.pushView(buttonBarArray[buttonBar.selectedIndex], data, null, cubeFlip);
			}
			
			protected function view1_viewActivateHandler(event:ViewNavigatorEvent):void
			{
				list.bottom=rect.height;
				buttonBar.selectedIndex=0;
			}
			
			protected function getData():void
			{
				getDataResult.token = sunView.getData();
			}
			
			protected function view1_viewDeactivateHandler(event:ViewNavigatorEvent):void
			{
				list.selectedIndex=-1;
			}
			
			protected function back_clickHandler(event:MouseEvent):void
			{
				navigator.popView();
			}
		]]>
		
	</fx:Script>
	
	<fx:Declarations>
		<s:CallResponder id="getDataResult"/>
		<sunview:SunView id="sunView"/>
	</fx:Declarations>
	<s:navigationContent>
		<ns1:backBtn id="backButton" x="10" y="24" click="back_clickHandler(event)"/>
	</s:navigationContent>
	
	<s:List id="list" width="100%" height="100%" change="list_changeHandler(event)">
		
		<s:itemRenderer>
			
			<fx:Component>
				
				<s:IconItemRenderer iconField="thumbnail" labelField="title" messageFunction="headlineMessageFunction" height="90" width="100%" decorator="@Embed(source='assets/arrow.png')">
					
					<fx:Script>
						<![CDATA[
							import id.utils.StringTrim;
							private function headlineMessageFunction(item:Object):String
							{		
								return StringTrim.stringTrim(item.headline);
							}
						]]>
					</fx:Script>
					
				</s:IconItemRenderer>
			</fx:Component>
		</s:itemRenderer>
		<s:AsyncListView list="{getDataResult.lastResult}"/>
	</s:List>
	
	<s:Group bottom="0" width="100%">
		<s:Rect id="rect" width="100%" height="65">
			<s:fill>
				<s:SolidColor color="0x000000" alpha="1"/>
			</s:fill>
		</s:Rect>
	</s:Group>
	
	<s:ButtonBar id="buttonBar" bottom="10" width="97%" height="45" change="buttonChange(event)"
				 chromeColor="#111111" color="#FFFFFF" fontSize="18" fontWeight="normal"
				 horizontalCenter="0" selectedIndex="0">  
		<s:ArrayCollection>
			<fx:String>Live Views</fx:String> 
			<fx:String>Visualizations</fx:String> 
			<fx:String>Videos</fx:String> 
			<fx:String>More</fx:String>
		</s:ArrayCollection>
	</s:ButtonBar>
	
	
</s:View>
